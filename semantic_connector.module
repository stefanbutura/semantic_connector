<?php

// Always add the general Semantic Connector Resource library.
function semantic_connector_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'semantic_connector/general';
}

/**
 * Implements hook_init().
 */
function semantic_connector_init() {
  $current_path = \Drupal::service('path.current')->getPath();
  // Global notifications (don't check on AJAX requests and during batches).
  if ($current_path != 'batch' && (empty($_SERVER['HTTP_X_REQUESTED_WITH']) || !strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest')) {
    $notifications = \Drupal\semantic_connector\SemanticConnector::checkGlobalNotifications($current_path == 'semantic-connector/refresh-notifications');

    // Check if existing notification messages have to be replaced / removed.
    $messages = drupal_get_messages('warning');
    if (!empty($warning_messages) && isset($messages['warning'])) {
      foreach ($messages['warning'] as $warning_message) {
        if (strpos($warning_message, '<ul class="semantic_connector_notifications">') === FALSE) {
          drupal_set_message($warning_message, 'warning');
        }
      }
    }

    if (!empty($notifications)) {
      $notification_config = \Drupal\semantic_connector\SemanticConnector::getGlobalNotificationConfig();
      $user_roles = \Drupal::currentUser()->getRoles();
      foreach ($notification_config['roles'] as $rid) {
        if (isset($user_roles[$rid])) {
          $notification_message = t('Semantic Connector notifications:') . '<ul class="semantic_connector_notifications"><li>' . implode('</li><li>', $notifications) . '</li></ul>';


          // Add the possibility to refresh the notifications.
          if (\Drupal::currentUser()->hasPermission('administer semantic connector')) {
            $notification_message .= '<br />' . \Drupal\Core\Link::fromTextAndUrl('Refresh the notifications', \Drupal\Core\Url::fromRoute('semantic_connector.refresh_notifications', [], ['query' => ['destination' => $current_path]]))->toString() . ' | ' . \Drupal\Core\Link::fromTextAndUrl('Go to the notification settings', \Drupal\Core\Url::fromRoute('semantic_connector.config', [], ['query' => ['destination' => $current_path]]))->toString();
          }

          drupal_set_message($notification_message, 'warning');
          break;
        }
      }

      if (!empty($notification_config['mail_to'])) {
        // @todo: send mails.
      }
    }
  }
}