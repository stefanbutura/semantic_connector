<?php

// Always add the general Semantic Connector Resource library.
function semantic_connector_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'semantic_connector/general';
}

/**
 * Implements hook_mail().
 */
function semantic_connector_mail($key, &$message, $params) {
  $langcode = $message['langcode'];
  switch ($key) {
    case 'global_notifications':
      $message['body'][] = t('Semantic Connector notifications:', array(), ['langcode' => $langcode]);
      $notification_text = '';
      foreach ($params['notifications'] as $notification) {
        $notification_text .= '- ' . $notification . "\n";
      }
      $message['body'][] = $notification_text;

      $link_text = t('Link to refresh the notifications: ', [], ['langcode' => $langcode]) . \Drupal\Core\Url::fromRoute('semantic_connector.refresh_notifications', [], array('absolute' => TRUE))->toString() . "\n";
      $link_text .= t('Link to change the notification settings: ', [], ['langcode' => $langcode]) . \Drupal\Core\Url::fromRoute('semantic_connector.config', [], array('absolute' => TRUE))->toString();
      $message['body'][] = $link_text;

      $message['subject'] = t('Semantic Connector notifications - @site_title', ['@site_title' => \Drupal::config('system.site')->get('name')], ['langcode' => $langcode]);
      break;
  }
}

/**
 * Implements hook_semantic_connector_global_notification_actions().
 */
function semantic_connector_semantic_connector_global_notification_actions() {
  return array(
    array(
      'id' => 'semantic_connector_poolparty_license_check',
      'title' => t('PoolParty Licenses expiration'),
      'description' => t("If a PoolParty license is about to exire in the next 14 days or is already expired this notification gets triggered."),
      'default_value' => TRUE,
      'callback' => ['Drupal\semantic_connector\SemanticConnector', 'checkPoolpartyLicenses'],
    )
  );
}